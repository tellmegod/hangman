# =============================================================================
# hangman test
# =============================================================================
import tkinter as tk
from tkinter import filedialog as fd
from random import choice as c
def hangman():
    """
    –ø—Ä–æ—Å—Ç–µ—Ü–∫–∞—è –≤–∏—Å–µ–ª–∏—Ü–∞ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º –≤—ã–±–æ—Ä–æ–º —Å–ª–æ–≤–∞, –≤—Ä–æ–¥–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    """
    root = tk.Tk()
    root.withdraw()
    root.wm_attributes('-topmost', 1)
    err = 0  # –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∫–æ–ª-–≤–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–≥–∞–¥–∞–Ω–Ω—ã—Ö –±—É–∫–≤
    err_draw = [r"",
                r"________ ",
                r"|      |",
                r"|    (üëÄ) ",
                r"|     \_/ ",
                r"|     /|\ ",
                r"|     / \ ",
                r"| "
                ]  # —Ä–∏—Å—É–Ω–æ–∫ –≤–∏—Å–µ–ª–∏—Ü—ã –¥–ª—è –ø–æ—Å—Ç—Ä–æ—á–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
    # –ø—É–ª —Å–æ —Å–ª–æ–≤–∞–º–∏
    file_path = fd.askopenfilename(parent=root)
    with open(file_path, 'r', encoding='utf-8') as file:
        wordpool = [line.split()[0] for line in file.readlines()]
    # —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ –ø—É–ª–∞
    word = wordpool[c(range(len(wordpool)))]
    letters = "–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è"  # –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±—É–∫–≤—ã
    chars = list(word)  # —Å–ø–∏—Å–æ–∫ —Å –±—É–∫–≤–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–≥–∞–¥–∞—Ç—å
    board = ["__"] * len(word)  # —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω
    win = 0  # –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —É–≥–∞–¥—ã–≤–∞–Ω–∏—è (1 - —É–≥–∞–¥–∞–ª–∏)
    while err < len(err_draw)-1:
        print("\n")
        print(" ".join(board))
        char = input("–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É:").lower()
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ (—Å–∏–º–≤–æ–ª—ã, —Ü–∏—Ñ—Ä—ã, –¥—Ä—É–≥–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞ –∏ –¥—Ä.)
        if len(char) == 1 and char in letters:
            if char in chars:
                board[chars.index(char)] = char
                # –µ—Å–ª–∏ –≤ —Å–ª–æ–≤–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è –±—É–∫–≤—ã, index –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é
                # –∑–∞–º–µ–Ω—è–µ–º —É–≥–∞–¥–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª –Ω–∞ "-", —á—Ç–æ–±—ã —ç—Ç–æ –æ–±–æ–π—Ç–∏
                chars[chars.index(char)] = '-'
            else:
                # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
                err += 1
        else:
            print('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞')
        if err < len(err_draw)-1:
            # –≤—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–∏—Å—É–Ω–æ–∫ –≤–∏—Å–µ–ª–∏—Ü—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–ª-–≤–∞ –æ—à–∏–±–æ–∫
            print("\n".join(err_draw[:err+1]))
        if "__" not in board:
            # –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
            print("\n–ü–æ–±–µ–¥–∞! –£–≥–∞–¥–∞–Ω–æ —Å–ª–æ–≤–æ:", "".join(board))
            win = 1
            break
    if win != 1:
        # —Å–æ—á—É–≤—Å—Ç–≤—É–µ–º –∏ —Ç–æ–∂–µ –≤—ã–≤–æ–¥–∏–º –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
        print("\n".join(err_draw[:err+1]))
        print('–ü—Ä–æ–∏–≥—Ä–∞–ª! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: ', word)
hangman()
